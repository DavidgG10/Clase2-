import javax.swing.JOptionPane;

class Student {
    private String name;
    private String course;
    private String professor;
    private double grade;

    public Student(String name, String course, String professor, double grade) {
        this.name = name;
        this.course = course;
        this.professor = professor;
        this.grade = grade;
    }

    public String getName() {
        return name;
    }

    public double getGrade() {
        return grade;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Course: " + course + ", Professor: " + professor + ", Grade: " + grade;
    }
}

public class StudentManager {

    public static void main(String[] args) {
        Student[] students = new Student[10];

        // Input student data
        for (int i = 0; i < students.length; i++) {
            String name = JOptionPane.showInputDialog("Enter the name of student " + (i + 1) + ":");
            String course = JOptionPane.showInputDialog("Enter the course for " + name + ":");
            String professor = JOptionPane.showInputDialog("Enter the professor for " + name + ":");
            double grade = Double.parseDouble(JOptionPane.showInputDialog("Enter the grade for " + name + ":"));
            students[i] = new Student(name, course, professor, grade);
        }

        // Display all students
        StringBuilder studentList = new StringBuilder("List of Students:\n");
        for (Student student : students) {
            studentList.append(student.toString()).append("\n");
        }
        JOptionPane.showMessageDialog(null, studentList.toString());

        // Find student with the highest and lowest grade
        Student highestGradeStudent = students[0];
        Student lowestGradeStudent = students[0];
        double totalGrade = 0;

        for (Student student : students) {
            if (student.getGrade() > highestGradeStudent.getGrade()) {
                highestGradeStudent = student;
            }
            if (student.getGrade() < lowestGradeStudent.getGrade()) {
                lowestGradeStudent = student;
            }
            totalGrade += student.getGrade();
        }

        // Calculate average grade
        double averageGrade = totalGrade / students.length;

        // Display results
        JOptionPane.showMessageDialog(null, "Student with Highest Grade: " + highestGradeStudent.toString());
        JOptionPane.showMessageDialog(null, "Student with Lowest Grade: " + lowestGradeStudent.toString());
        JOptionPane.showMessageDialog(null, "Average Grade: " + averageGrade);

        // Students above average
        StringBuilder aboveAverageList = new StringBuilder("Students with Grades Above Average:\n");
        StringBuilder belowAverageList = new StringBuilder("Students with Grades Below Average:\n");

        for (Student student : students) {
            if (student.getGrade() > averageGrade) {
                aboveAverageList.append(student.toString()).append("\n");
            } else if (student.getGrade() < averageGrade) {
                belowAverageList.append(student.toString()).append("\n");
            }
        }

        JOptionPane.showMessageDialog(null, aboveAverageList.toString());
        JOptionPane.showMessageDialog(null, belowAverageList.toString());
    }
}
